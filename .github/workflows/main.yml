# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow  run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    test:
      runs-on: ubuntu-latest
      name: Integration tests
      container: cypress/browsers:node12.13.0-chrome78-ff70
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Run tests
          run: |
              apt-get update && apt-get install --quiet --assume-yes python-dev python-pip unzip wget
              echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
              wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
              apt update
              apt install -y google-chrome-stable
              cp requirements..txt /tmp/requirements.txt
              pip install -r /tmp/requirements.txt
              CHROMEDRIVER_VERSION=`wget --no-verbose --output-document - https://chromedriver.storage.googleapis.com/LATEST_RELEASE`
              wget --no-verbose --output-document /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
              unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver
              chmod +x /opt/chromedriver/chromedriver
              ln -fs /opt/chromedriver/chromedriver /usr/local/bin/chromedriver
              robot -v BROWSER:HeadlessChrome -v APP_ENV:test -d ${{github.workspace}}/reports ${{github.workspace}}/e2e

        - name: Upload test results
          uses: actions/upload-artifact@v2
          if: always()
          with:
            name: reports
            path: |
              reports
    deploy:
        runs-on: ubuntu-latest
        name: Deploy
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Deploy
              uses: akhileshns/heroku-deploy@v3.5.6
              with:
                  heroku_api_key: ${{secrets.HEROKU_API_KEY}}
                  heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
                  heroku_email: ${{secrets.HEROKU_EMAIL}}
